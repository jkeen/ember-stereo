{"version":3,"file":"hls.js","sources":["../../src/stereo-connections/hls.js"],"sourcesContent":["import BaseSound from './base';\nimport { tracked } from '@glimmer/tracking';\nimport { waitFor } from '@ember/test-waiters';\n/**\n * This is the connection class that uses HLS.js to play sounds.\n *\n * @class HLS\n * @extends HLSSound\n * @constructor\n */\n\nfunction getMediaSource(preferManagedMediaSource = true) {\n  if (typeof self === 'undefined') return undefined;\n  const mms =\n    (preferManagedMediaSource || !self.MediaSource) && self.ManagedMediaSource;\n  return mms || self.MediaSource || self.WebKitMediaSource;\n}\n\nfunction mimeTypeForCodec(codec, type) {\n  return `${type}/mp4;codecs=\"${codec}\"`;\n}\n\nfunction getSourceBuffer() {\n  return self.SourceBuffer || self.WebKitSourceBuffer;\n}\n\nfunction isMSESupported() {\n  const mediaSource = getMediaSource();\n  if (!mediaSource) {\n    return false;\n  }\n\n  // if SourceBuffer is exposed ensure its API is valid\n  // Older browsers do not expose SourceBuffer globally so checking SourceBuffer.prototype is impossible\n  const sourceBuffer = getSourceBuffer();\n  return (\n    !sourceBuffer ||\n    (sourceBuffer.prototype &&\n      typeof sourceBuffer.prototype.appendBuffer === 'function' &&\n      typeof sourceBuffer.prototype.remove === 'function')\n  );\n}\n\nexport default class HLSSound extends BaseSound {\n  static acceptMimeTypes = ['application/vnd.apple.mpegurl'];\n  static canUseConnection() {\n    // This is copied from the HLS source. We don't want to load all of HLS.js just to check if it can be used\n    if (!isMSESupported()) {\n      return false;\n    }\n\n    const mediaSource = getMediaSource();\n    return (\n      typeof mediaSource?.isTypeSupported === 'function' &&\n      (['avc1.42E01E,mp4a.40.2', 'av01.0.01M.08', 'vp09.00.50.08'].some(\n        (codecsForVideoContainer) =>\n          mediaSource.isTypeSupported(\n            mimeTypeForCodec(codecsForVideoContainer, 'video')\n          )\n      ) ||\n        ['mp4a.40.2', 'fLaC'].some((codecForAudioContainer) =>\n          mediaSource.isTypeSupported(\n            mimeTypeForCodec(codecForAudioContainer, 'audio')\n          )\n        ))\n    );\n  }\n\n  static key = 'HLS';\n  static toString() {\n    return 'HLS';\n  }\n\n  @tracked live = false;\n  @tracked loaded = false;\n  @tracked mediaRecoveryAttempts = 0;\n  @tracked _currentTime = null;\n  @tracked _startTime = null;\n  @tracked _endTime = null;\n\n  @waitFor\n  async setup() {\n    if (!this.hls && !this.video) {\n      this.debug('Setting up HLS');\n      let options = {\n        debug: false,\n        startFragPrefetch: true,\n      };\n\n      if (this.options?.xhr) {\n        options.xhrSetup = (xhr, url) => {\n          if (this.url !== url && this.options.xhr?.manifestOnly) {\n            // If this isn't the manifest request and we've requested manifestOnly, don't set these options\n            return;\n          }\n\n          xhr.withCredentials = this.options.xhr?.withCredentials || false;\n\n          if (this.options?.xhr?.headers) {\n            Object.keys(this.options.xhr.headers).forEach((key) => {\n              xhr.setRequestHeader(key, this.options?.xhr?.headers[key]);\n            });\n          }\n\n          xhr.method = this.options.xhr?.method || 'GET';\n        };\n      }\n\n      await this.loadHLS().then(({ HLS }) => {\n        if (this.hls) {\n          this.hls.destroy();\n        }\n\n        if (this.video) {\n          this.video.removeAttribute('src');\n        }\n\n        let hls = new HLS({ ...options, ...(this.options || {}) });\n        this.hls = hls;\n\n        let video = document.createElement('video');\n        video.setAttribute('crossorigin', 'anonymous');\n        video.setAttribute('webkit-playsinline', '');\n        video.setAttribute('playsinline', '');\n        this.video = video;\n\n        this._setupHLSEvents(hls, HLS);\n        this._setupPlayerEvents(this.video);\n        hls.attachMedia(this.video);\n      });\n    }\n  }\n\n  _setupHLSEvents(instance, HLS) {\n    instance.on(HLS.Events.MEDIA_ATTACHING, () => {\n      this.debug('media attaching');\n    });\n    instance.on(HLS.Events.MEDIA_DETACHING, () => {\n      this.debug('media detaching');\n    });\n    instance.on(HLS.Events.MEDIA_DETACHED, () => {\n      this.debug('media detached');\n    });\n\n    // hls.on(HLS.Events.BUFFER_RESET, () => {\n    //   this.debug('buffer reset');\n    //   this._checkIfAudioIsReady();\n    // });\n\n    instance.on(HLS.Events.ERROR, (e, data) => this._onHLSError(e, data, HLS));\n\n    instance.on(HLS.Events.MEDIA_ATTACHED, () => {\n      this.debug('media attached, loading source');\n      instance.loadSource(this.url);\n    });\n\n    instance.on(HLS.Events.MANIFEST_PARSED, (e, data) => {\n      this.debug(\n        `manifest parsed and loaded, found ${data.levels.length} quality level(s)`\n      );\n      this.manifest = data;\n    });\n\n    instance.on(HLS.Events.LEVEL_LOADED, (e, data) => {\n      this.debug(`level ${data.level} loaded`);\n      this.live = data.details.live;\n      this._updateStartAndEndTimes(data.details);\n      this._signalAudioIsReady();\n    });\n\n    instance.on(HLS.Events.AUDIO_TRACK_LOADED, () => {\n      this.debug('audio track loaded');\n      this._signalAudioIsReady();\n    });\n\n    instance.on(HLS.Events.ERROR, (e, data) => this._onHLSError(e, data, HLS));\n\n    instance.on(HLS.Events.FRAG_CHANGED, (e, f) => {\n      // this._updateAudioBuffer(f.frag);\n      this._updateId3Info(f.frag);\n    });\n  }\n\n  _updateStartAndEndTimes(levelDetails) {\n    if (levelDetails?.fragments?.length > 0) {\n      const fragments = levelDetails.fragments;\n      const lastFragment = fragments[fragments.length - 1];\n      const firstFragment = fragments[0];\n\n      if (firstFragment?.programDateTime) {\n        if (new Date(firstFragment.programDateTime) != this._startTime) {\n          this._startTime = new Date(firstFragment.programDateTime);\n        }\n      }\n\n      if (lastFragment?.programDateTime) {\n        if (new Date(lastFragment.programDateTime) != this._endTime) {\n          this._endTime = new Date(lastFragment.programDateTime);\n        }\n      }\n    }\n  }\n\n  _updateId3Info(fragment) {\n    let newId3TagMetadata = {\n      title: fragment.title,\n      programDateTime: fragment.programDateTime,\n      rawProgramDateTime: fragment.rawProgramDateTime,\n    };\n\n    if (\n      JSON.stringify(this.id3TagMetadata) !== JSON.stringify(newId3TagMetadata)\n    ) {\n      this.debug('hls metadata changed');\n      this.trigger('audio-metadata-changed', {\n        sound: this,\n        old: this.id3TagMetadata,\n        new: newId3TagMetadata,\n      });\n\n      this.id3TagMetadata = newId3TagMetadata;\n    }\n  }\n\n  _setupPlayerEvents(video) {\n    video.addEventListener('playing', () => {\n      if (this.loaded) {\n        this.trigger('audio-played', { sound: this });\n      } else {\n        this._signalAudioIsReady();\n      }\n    });\n\n    video.addEventListener('pause', () =>\n      this.trigger('audio-paused', { sound: this })\n    );\n    video.addEventListener('ended', () =>\n      this.trigger('audio-ended', { sound: this })\n    );\n    video.addEventListener('durationchange', () =>\n      this.trigger('audio-duration-changed', { sound: this })\n    );\n    video.addEventListener('seeked', () =>\n      this.trigger('audio-position-changed', {\n        sound: this,\n        currentTime: this.currentTime,\n      })\n    );\n    video.addEventListener('timeupdate', () =>\n      this.trigger('audio-position-changed', {\n        sound: this,\n        currentTime: this.currentTime,\n      })\n    );\n    video.addEventListener('progress', () =>\n      this.trigger('audio-loading', { sound: this })\n    );\n    video.addEventListener('error', (e) => this._onVideoError(e));\n  }\n\n  async _checkIfAudioIsReady() {\n    if (!this.loaded) {\n      // The only reliable way to check if this thing is actually ready\n      // is to play it. If we get a play signal we're golden, but if we\n      // get an error, we're outta here\n\n      this.debug('Testing if audio is ready');\n      this.video.volume = 0;\n      this.tryPlaying();\n    }\n  }\n\n  _signalAudioIsReady() {\n    this.debug('Test succeeded, signaling audio-ready');\n    this.loaded = true;\n    this.trigger('audio-loaded', { sound: this });\n    this.trigger('audio-ready', { sound: this });\n  }\n\n  _onVideoError(e) {\n    switch (e.target.error.code) {\n      case e.target.error.MEDIA_ERR_ABORTED:\n        this.debug('video element error: playback aborted');\n        this._giveUpAndDie('unknown error');\n        break;\n      case e.target.error.MEDIA_ERR_NETWORK:\n        this.debug('video element error: network error');\n        this._giveUpAndDie('Network error caused download to fail');\n        break;\n      case e.target.error.MEDIA_ERR_DECODE:\n        this.debug('video element error: decoding error');\n        this._tryToRecoverFromMediaError(e.target.error.MEDIA_ERR_DECODE);\n        break;\n      case e.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:\n        this.debug('video element error: source format not supported');\n        this._giveUpAndDie('audio source format is not supported');\n        break;\n      default:\n        this._giveUpAndDie('unknown error');\n        break;\n    }\n  }\n\n  _onHLSError(error, data, HLS) {\n    if (data.fatal) {\n      this.debug('HLS fatal error', data);\n      switch (data.type) {\n        case HLS.ErrorTypes.NETWORK_ERROR:\n          this._giveUpAndDie(`${data.details}`);\n          break;\n        case HLS.ErrorTypes.MEDIA_ERROR:\n          this._tryToRecoverFromMediaError(`${data.details}`);\n          break;\n        default:\n          this._giveUpAndDie(`${data.details}`);\n          break;\n      }\n    }\n  }\n\n  _tryToRecoverFromMediaError(error) {\n    let mediaRecoveryAttempts = this.mediaRecoveryAttempts;\n    let hls = this.hls;\n\n    switch (mediaRecoveryAttempts) {\n      case 0:\n        this.debug(`First attempt at media error recovery for error: ${error}`);\n        hls.recoverMediaError();\n        break;\n      case 1:\n        this.debug(\n          `Second attempt at media error recovery: switching codecs for error: ${error}`\n        );\n        hls.swapAudioCodec();\n        hls.recoverMediaError();\n        break;\n      case 2:\n        this.debug(`We tried our best and we failed: ${error}`);\n        this._giveUpAndDie(error);\n        break;\n    }\n\n    this.mediaRecoveryAttempts = this.mediaRecoveryAttempts + 1;\n  }\n\n  _giveUpAndDie(error) {\n    this.hls.destroy();\n    this.trigger('audio-load-error', { sound: this, error });\n  }\n\n  get audioElement() {\n    return this.video;\n  }\n\n  /* Public interface to sound */\n\n  get currentTime() {\n    if (this.hls.playingDate) {\n      return new Date(this.hls.playingDate);\n    }\n\n    return null;\n  }\n\n  get startTime() {\n    return this._startTime;\n  }\n\n  get endTime() {\n    return this._endTime;\n  }\n\n  get isFastForwardable() {\n    return true;\n  }\n\n  get isRewindable() {\n    return true;\n  }\n\n  get isSeekable() {\n    return true;\n  }\n\n  get isLive() {\n    return this.live;\n  }\n\n  get isStream() {\n    return this.isLive;\n  }\n\n  _audioDuration() {\n    return this.video.duration * 1000;\n  }\n\n  _currentPosition() {\n    return this.video.currentTime * 1000;\n  }\n\n  _setPosition(position) {\n    this.video.currentTime = position / 1000;\n    if (!this.isPlaying) {\n      this.hls.startLoad();\n    }\n\n    return position;\n  }\n\n  _setVolume(volume) {\n    this.video.volume = volume / 100;\n  }\n\n  async tryPlaying() {\n    try {\n      await this.video.play();\n    } catch (error) {\n      if (error.name == 'NotAllowedError') {\n        this.trigger('audio-blocked', {\n          sound: this,\n          error: error.message,\n          event: error,\n        });\n        this.pause();\n      }\n    }\n  }\n\n  async play() {\n    this.isLoading = true;\n\n    if (!this.video.src) {\n      this.trigger('audio-loading', this);\n      this.setup(); // the stream was stopped before\n    }\n\n    await this.tryPlaying();\n\n    this.debug('#play');\n    if (this.loadStopped) {\n      this.hls.startLoad();\n      this.loadStopped = false;\n    }\n  }\n\n  pause() {\n    this.debug('#pause');\n    this.video.pause();\n    this.hls.stopLoad();\n    this.loadStopped = true;\n  }\n\n  stop() {\n    this.debug('#stop');\n    this.pause();\n    this.video.removeAttribute('src');\n  }\n\n  teardown() {\n    this.hls.destroy();\n    super.teardown();\n  }\n\n  @waitFor\n  async loadHLS() {\n    return import('hls.js')\n      .then((module) => module.default)\n      .then((HLS) => {\n        return Promise.resolve({\n          HLS: HLS,\n        });\n      });\n  }\n}\n"],"names":["getMediaSource","preferManagedMediaSource","self","undefined","mms","MediaSource","ManagedMediaSource","WebKitMediaSource","mimeTypeForCodec","codec","type","getSourceBuffer","SourceBuffer","WebKitSourceBuffer","isMSESupported","mediaSource","sourceBuffer","prototype","appendBuffer","remove","HLSSound","_class","_class2","BaseSound","constructor","args","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","canUseConnection","isTypeSupported","some","codecsForVideoContainer","codecForAudioContainer","toString","setup","hls","video","debug","options","startFragPrefetch","xhr","xhrSetup","url","manifestOnly","withCredentials","headers","Object","keys","forEach","key","setRequestHeader","method","loadHLS","then","HLS","destroy","removeAttribute","document","createElement","setAttribute","_setupHLSEvents","_setupPlayerEvents","attachMedia","instance","on","Events","MEDIA_ATTACHING","MEDIA_DETACHING","MEDIA_DETACHED","ERROR","e","data","_onHLSError","MEDIA_ATTACHED","loadSource","MANIFEST_PARSED","levels","length","manifest","LEVEL_LOADED","level","live","details","_updateStartAndEndTimes","_signalAudioIsReady","AUDIO_TRACK_LOADED","FRAG_CHANGED","f","_updateId3Info","frag","levelDetails","fragments","lastFragment","firstFragment","programDateTime","Date","_startTime","_endTime","fragment","newId3TagMetadata","title","rawProgramDateTime","JSON","stringify","id3TagMetadata","trigger","sound","old","new","addEventListener","loaded","currentTime","_onVideoError","_checkIfAudioIsReady","volume","tryPlaying","target","error","code","MEDIA_ERR_ABORTED","_giveUpAndDie","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","_tryToRecoverFromMediaError","MEDIA_ERR_SRC_NOT_SUPPORTED","fatal","ErrorTypes","NETWORK_ERROR","MEDIA_ERROR","mediaRecoveryAttempts","recoverMediaError","swapAudioCodec","audioElement","playingDate","startTime","endTime","isFastForwardable","isRewindable","isSeekable","isLive","isStream","_audioDuration","duration","_currentPosition","_setPosition","position","isPlaying","startLoad","_setVolume","play","name","message","event","pause","isLoading","src","loadStopped","stopLoad","stop","teardown","module","default","Promise","resolve","_defineProperty","_applyDecoratedDescriptor","tracked","configurable","enumerable","writable","initializer","waitFor","getOwnPropertyDescriptor"],"mappings":"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"}