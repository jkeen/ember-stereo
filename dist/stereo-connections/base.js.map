{"version":3,"file":"base.js","sources":["../../src/stereo-connections/base.js"],"sourcesContent":["import { next, later, cancel } from '@ember/runloop';\nimport { A } from '@ember/array';\nimport { assert } from '@ember/debug';\nimport { getMimeType } from '../-private/utils/mime-types';\nimport debug from 'debug';\nimport { tracked } from '@glimmer/tracking';\nimport Evented from '../-private/utils/evented';\nimport hasEqualUrls from '../-private/utils/has-equal-urls';\nimport { getOwner } from '@ember/application';\nimport { registerDestructor } from '@ember/destroyable';\nimport { task, animationFrame, timeout, didCancel } from 'ember-concurrency';\nimport { macroCondition, isTesting } from '@embroider/macros';\n\n/**\n * This is the base sound object from which other sound objects are derived.\n *\n * @class BaseSound\n * @constructor\n */\nexport default class Sound extends Evented {\n  static setup(config) {\n    this.config = config;\n  }\n\n  static canPlay(url, mimeType) {\n    let usablePlatform = this.canUseConnection(url);\n    if (!usablePlatform) {\n      debug('ember-stereo:canPlay')(`can not use connection on this platform`);\n      return false;\n    }\n\n    mimeType = mimeType || url.mimeType || getMimeType(url);\n\n    if (mimeType) {\n      let result = this.canPlayMimeType(mimeType);\n      if (result) {\n        debug('ember-stereo:canPlay')(\n          `can play mime type ${mimeType} (${this.url})`\n        );\n      } else {\n        debug('ember-stereo:canPlay')(\n          `can't play mime type ${mimeType} (${this.url})`\n        );\n      }\n\n      return result;\n    } else {\n      debug('ember-stereo:canPlay')(\n        `can't play mime type ${mimeType} (${this.url})`\n      );\n      /* eslint-enable no-console */\n      return true;\n    }\n  }\n\n  static canUseConnection() {\n    return true;\n  }\n\n  static canPlayMimeType(mimeType) {\n    let mimeTypeWhiteList = this.acceptMimeTypes;\n    let mimeTypeBlackList = this.rejectMimeTypes;\n\n    if (mimeTypeWhiteList) {\n      return A(mimeTypeWhiteList).includes(mimeType);\n    } else if (mimeTypeBlackList) {\n      return !A(mimeTypeBlackList).includes(mimeType);\n    } else {\n      return true; // assume true\n    }\n  }\n\n  /**\n   * The raw url of the sound that will be handed to the audio element.\n   * @property url\n   * @type {String}\n   * @public\n   */\n  @tracked url;\n\n  get identifier() {\n    return this.url;\n  }\n\n  /**\n   * name of the connection that produced the sound\n   * @property connectionName\n   * @type {String}\n   * @public\n   */\n  @tracked connectionName;\n\n  /**\n   * has the sound played?\n   * @property hasPlayed\n   * @type {Boolean}\n   * @public\n   */\n  @tracked hasPlayed = false;\n\n  /**\n   * is the sound currently loading?\n   * @property isLoading\n   * @type {Boolean}\n   * @public\n   */\n  @tracked isLoading = false;\n\n  /**\n   * is the sound loaded?\n   * @property isLoaded\n   * @type {Boolean}\n   * @public\n   */\n  @tracked isLoaded = false;\n\n  /**\n   * is the sound currently playing?\n   * @property isPlaying\n   * @type {Boolean}\n   * @public\n   */\n  @tracked isPlaying = false;\n\n  /**\n   * is the sound errored?\n   * @property isErrored\n   * @type {Boolean}\n   * @public\n   */\n  @tracked isErrored = false;\n\n  /**\n   * is the sound ready?\n   * @property isReady\n   * @type {Boolean}\n   * @public\n   */\n  @tracked isReady = false;\n\n  /**\n   * has the sound been blocked by autoplay protections?\n   * @property isBlocked\n   * @type {Boolean}\n   * @public\n   */\n  @tracked isBlocked = false;\n\n  /**\n   * the sound's error, if errored\n   * @property error\n   * @type {String}\n   * @public\n   */\n  @tracked error = null;\n  @tracked _position = 0;\n\n  /**\n   * what's the duration of the sound?\n   * @property duration\n   * @type {Integer} (ms)\n   * @public\n   */\n  @tracked duration = 0;\n\n  /**\n   * @property percentLoaded\n   * @type {Integer} (0-100)\n   * @public\n   */\n  @tracked percentLoaded = 0;\n\n  /**\n   * Metadata hash. Put whatever you want in here\n   * @property metadata\n   * @type {Hash} (0-100)\n   * @public\n   */\n\n  get metadata() {\n    let owner = getOwner(this);\n\n    if (owner) {\n      let stereo = owner.lookup('service:stereo');\n      return stereo?.metadataCache?.find(this.url);\n    }\n\n    return {};\n  }\n\n  set metadata(value) {\n    let owner = getOwner(this);\n\n    if (owner) {\n      let stereo = owner.lookup('service:stereo');\n      stereo?.metadataCache?.store(this.url, value);\n    }\n  }\n\n  @tracked id3Tags = {};\n  @tracked id3TagMetadata = {};\n  @tracked _debug = {}; // for internal debugging\n  @tracked sharedAudioAccess;\n\n  get debugName() {\n    var parser = document.createElement('a');\n    parser.href = this.url;\n\n    let parts = parser.pathname.split('/');\n    return `ember-stereo:${\n      this.connectionName || this.constructor.toString()\n    } (${parts[parts.length - 1]})`;\n  }\n\n  trigger(eventName, info = {}) {\n    if (!info) {\n      info = {};\n    }\n\n    if (!info.sound) {\n      info.sound = this;\n    }\n\n    this.eventManager.trigger(eventName, info);\n  }\n\n  /**\n   * is the sound a stream?\n   * @property isStream\n   * @type {Boolean}\n   * @readOnly\n   * @public\n   */\n  get isStream() {\n    return this.duration == Infinity;\n  }\n\n  /**\n   * is the sound fast forwardable?\n   * @property isFastForwardable\n   * @type {Boolean}\n   * @readOnly\n   * @public\n   */\n  get isFastForwardable() {\n    return !this.isStream;\n  }\n\n  /**\n   * is the sound rewindable?\n   * @property isRewindable\n   * @type {Boolean}\n   * @readOnly\n   * @public\n   */\n  get isRewindable() {\n    return !this.isStream;\n  }\n\n  /**\n   * is the sound seekable?\n   * @property isSeekable\n   * @type {Boolean}\n   * @readOnly\n   * @public\n   */\n  get isSeekable() {\n    return !this.isStream;\n  }\n\n  /**\n   * get/set the sound's position (in ms)\n   * @property position\n   * @type {Integer}\n   * @public\n   */\n  get position() {\n    // _position is updated on a loop on the currently playing sound\n    return this._position;\n  }\n  set position(v) {\n    this.setPositionTask.perform(v).catch((e) => {\n      if (!didCancel(e)) {\n        throw e;\n      }\n    });\n  }\n\n  @task({ maxConcurrency: 1, restartable: true })\n  *setPositionTask(v) {\n    this.trigger('audio-position-will-change', {\n      sound: this,\n      currentPosition: this._currentPosition(),\n      newPosition: v,\n    });\n\n    if (macroCondition(isTesting())) {\n      // in testing, we don't want to wait for the next animation frame\n    } else {\n      yield timeout(50);\n    }\n\n    // next(() => {\n    this._position = this._setPosition(v);\n    // });\n  }\n\n  /* we both want to query for the playing sounds position, and fire change events\n   more often than an audio element would, as documented in this issue: https://github.com/jkeen/ember-stereo/issues/24  */\n\n  @task({ maxConcurrency: 1, drop: true })\n  *updatePositionTask() {\n    while (this.isPlaying) {\n      yield animationFrame();\n      yield timeout(50);\n\n      let previousPosition = this._position;\n      let currentPosition = this._currentPosition();\n\n      if (previousPosition != currentPosition) {\n        this._position = currentPosition;\n\n        this.trigger('audio-position-changed', {\n          sound: this,\n          position: this._position,\n        });\n      }\n    }\n  }\n\n  /**\n   * get the sound's current real time position (probably only available on certain HLS sounds)\n   * @property currentTime\n   * @type {Integer}\n   * @public\n   */\n  get currentTime() {\n    return null;\n  }\n\n  /**\n   * get the sound's reported mimeType\n   * @property mimeType\n   * @type {Integer}\n   * @public\n   */\n  get mimeType() {\n    return getMimeType(this.url);\n  }\n\n  debug() {\n    const log = debug(this.debugName);\n    log(...arguments);\n  }\n\n  constructor(args = {}) {\n    super(...arguments);\n    registerDestructor(this, this.teardown.bind(this));\n    this.url = args.url;\n    this.connectionName = args.connectionName;\n    this.connectionKey = args.connectionKey;\n    this.options = args.options;\n    this.sharedAudioAccess = args.sharedAudioAccess;\n    this.timeout = 'timeout' in args ? args.timeout : 30000;\n\n    let {\n      audioLoading,\n      audioLoaded,\n      audioReady,\n      audioPlayed,\n      audioPaused,\n      audioEnded,\n      audioLoadError,\n    } = this;\n    this.isLoading = true;\n\n    this.on('audio-played', () => {\n      this.hasPlayed = true;\n      this.isLoading = false;\n      this.isPlaying = true;\n      this.isBlocked = false;\n      this.error = null;\n\n      this.updatePositionTask.perform().catch((e) => {\n        if (!didCancel(e)) {\n          throw e;\n        }\n      });\n\n      if (audioPlayed) {\n        audioLoading(this);\n      }\n\n      this.debug(`audio-played ${this.isPlaying}`);\n    });\n\n    this.on('audio-paused', () => {\n      this.isPlaying = false;\n      if (audioPaused) {\n        audioPaused(this);\n      }\n      this.debug('audio-paused');\n    });\n\n    this.on('audio-ended', () => {\n      this.isPlaying = false;\n      this.position = 0;\n      if (audioEnded) {\n        audioEnded(this);\n      }\n      this.debug('audio-ended');\n    });\n\n    this.on('audio-ready', () => {\n      this.isReady = true;\n      this.duration = this._audioDuration();\n      if (audioReady) {\n        audioReady(this);\n      }\n      this.debug('audio-ready');\n    });\n\n    this.on('audio-load-error', (opts = {}) => {\n      let { error } = opts;\n\n      if (this.hasPlayed) {\n        this.isLoading = false;\n        this.isPlaying = false;\n      }\n\n      this.debug('audio-load-error');\n      if (this.shouldRetry && this.retry) {\n        this.retry();\n      } else {\n        this.isErrored = true;\n        this.error = error;\n        if (audioLoadError) {\n          audioLoadError(this);\n        }\n      }\n    });\n\n    this.on('audio-loaded', () => {\n      this.isLoading = false;\n      this.isLoaded = true;\n      if (audioLoaded) {\n        audioLoaded(this);\n      }\n      this.debug('audio-loaded');\n    });\n\n    this.on('audio-loading', (info) => {\n      if (info && info.percentLoaded) {\n        this.percentLoaded = info.percentLoaded;\n      }\n      if (audioLoading) {\n        audioLoading(this, info && info.percentLoaded);\n      }\n      this.debug('audio-loading');\n    });\n\n    this.on('audio-duration-changed', () => {\n      this.duration = this._audioDuration();\n    });\n\n    this.on('audio-blocked', () => {\n      this.isBlocked = true;\n    });\n\n    try {\n      this._detectTimeouts();\n      this.setup();\n    } catch (e) {\n      next(() => {\n        this.trigger('audio-load-error', {\n          sound: this,\n          error: `Error in setup ${e.message}`,\n        });\n        if (audioLoadError) {\n          audioLoadError(this);\n        }\n      });\n    }\n  }\n\n  _detectTimeouts() {\n    if (this.timeout) {\n      let timeout = later(() => {\n        this.trigger('audio-load-error', {\n          sound: this,\n          error: 'request timed out',\n        });\n      }, this.timeout);\n\n      this.on('audio-ready', () => cancel(timeout));\n      this.on('audio-load-error', () => cancel(timeout));\n    }\n  }\n\n  /**\n   * fast forward the sound\n   * @method fastForward\n   * @param {Integer} duration\n   * @public\n   */\n  fastForward(duration) {\n    let audioLength = this._audioDuration();\n    let currentPosition = this._currentPosition();\n    let newPosition = Math.min(currentPosition + duration, audioLength);\n\n    this.trigger('audio-will-fast-forward', {\n      sound: this,\n      currentPosition,\n      newPosition,\n    });\n    this.position = newPosition;\n  }\n\n  /**\n   * rewind the sound\n   * @method rewind\n   * @param {Integer} duration\n   * @public\n   */\n  rewind(duration) {\n    let currentPosition = this._currentPosition();\n    let newPosition = Math.max(currentPosition - duration, 0);\n    this.trigger('audio-will-rewind', {\n      sound: this,\n      currentPosition,\n      newPosition,\n    });\n    this.position = newPosition;\n  }\n\n  /**\n   * toggle the play/pause state\n   * @method togglePause\n   * @public\n   */\n  togglePause() {\n    if (this.isPlaying) {\n      return this.pause();\n    } else {\n      return this.play();\n    }\n  }\n\n  /* To be defined on the subclass */\n  setup() {\n    assert('[ember-stereo] #setup interface not implemented', false);\n  }\n\n  _setVolume() {\n    assert('[ember-stereo] #_setVolume interface not implemented', false);\n  }\n\n  _audioDuration() {\n    assert('[ember-stereo] #_audioDuration interface not implemented', false);\n  }\n\n  _currentPosition() {\n    assert('[ember-stereo] #_currentPosition interface not implemented', false);\n  }\n\n  _setPosition() {\n    assert('[ember-stereo] #_setPosition interface not implemented', false);\n  }\n\n  /**\n   * play the sound\n   * @method play\n   * @public\n   */\n  play() {\n    assert('[ember-stereo] #play interface not implemented', false);\n  }\n\n  /**\n   * pause the sound\n   * @method pause\n   * @public\n   */\n  pause() {\n    assert('[ember-stereo] #pause interface not implemented', false);\n  }\n\n  /**\n   * stop the sound\n   * @method stop\n   * @public\n   */\n  stop() {\n    assert('[ember-stereo] #stop interface not implemented', false);\n  }\n\n  teardown() {\n    // optionally implemented in subclasses\n    this.isDestroyed = true;\n  }\n\n  hasUrl(url) {\n    return hasEqualUrls(this.url, url);\n  }\n}\n"],"names":["Sound","_dec","task","maxConcurrency","restartable","_dec2","drop","_class","Evented","setup","config","canPlay","url","mimeType","usablePlatform","canUseConnection","debug","getMimeType","result","canPlayMimeType","mimeTypeWhiteList","acceptMimeTypes","mimeTypeBlackList","rejectMimeTypes","A","includes","identifier","metadata","owner","getOwner","stereo","lookup","metadataCache","find","value","store","debugName","parser","document","createElement","href","parts","pathname","split","connectionName","constructor","toString","length","trigger","eventName","info","sound","eventManager","isStream","duration","Infinity","isFastForwardable","isRewindable","isSeekable","position","_position","v","setPositionTask","perform","catch","e","didCancel","currentPosition","_currentPosition","newPosition","macroCondition","isTesting","timeout","_setPosition","updatePositionTask","isPlaying","animationFrame","previousPosition","currentTime","log","arguments","args","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","registerDestructor","teardown","bind","connectionKey","options","sharedAudioAccess","audioLoading","audioLoaded","audioReady","audioPlayed","audioPaused","audioEnded","audioLoadError","isLoading","on","hasPlayed","isBlocked","error","isReady","_audioDuration","opts","shouldRetry","retry","isErrored","isLoaded","percentLoaded","_detectTimeouts","next","message","later","cancel","fastForward","audioLength","Math","min","rewind","max","togglePause","pause","play","assert","_setVolume","stop","isDestroyed","hasUrl","hasEqualUrls","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","Object","getOwnPropertyDescriptor"],"mappings":"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"}