{"version":3,"file":"sound-position-progress.js","sources":["../../src/modifiers/sound-position-progress.js"],"sourcesContent":["/**\n * This is the modifier used to transform an element into a progress bar, where it will take up the width equivalent to the sound's position\n * ```hbs\n  <div {{sound-position-progress @identifier}}>\n  </div>\n  ```\n *\n  @class {{sound-position-progress}}\n  @type Modifier\n*/\n\nimport { inject as service } from '@ember/service';\nimport Modifier from 'ember-modifier';\nimport debug from 'debug';\n\nimport {\n  task,\n  waitForProperty,\n  waitForEvent,\n  timeout,\n  race,\n} from 'ember-concurrency';\n\nexport default class SoundPositionProgressModifier extends Modifier {\n  @service stereo;\n  element = null;\n  identifier = null;\n\n  get loadedSound() {\n    return this.stereo.findLoadedSound(this.identifier);\n  }\n\n  modifyPosition({ sound, position, duration }) {\n    let dur = duration || sound?.duration || 1;\n    let pos = position || sound?.position || 0;\n\n    let percent = Math.max(0, Math.min((pos / dur) * 100, 100));\n\n    this.element.style.width = `${percent}%`;\n    this.element.style.pointerEvents = 'none';\n  }\n\n  modify(element, [identifier], options) {\n    this.options = options;\n\n    if (this.identifier != identifier) {\n      this.identifier = identifier;\n    }\n    if (!this.element) {\n      this.element = element;\n      this.element.setAttribute('data-sound-position-progress', true);\n      this.modifyPosition({\n        sound: this.loadedSound,\n        position: options?.position,\n        duration: options?.duration,\n      });\n    }\n\n    if (this.identifier) {\n      this.watchPositionTask.perform().catch((e) => {\n        debug(`ember-stereo:sound-position-progress ${this.identifier}`, e);\n      });\n    } else {\n      this.modifyPosition({\n        position: options?.position,\n        duration: options?.duration,\n      });\n    }\n  }\n\n  @task\n  *watchPositionTask() {\n    while (true) {\n      yield waitForProperty(this, 'loadedSound', (v) => v);\n      let position = this.loadedSound?.position;\n      yield timeout(100);\n\n      if (this.loadedSound) {\n        let result = yield race([\n          waitForEvent(this.loadedSound, 'audio-position-will-change').then(\n            (event) => {\n              this.modifyPosition({\n                sound: this.loadedSound,\n                position: event.newPosition, // Set the position from the will-change event\n              });\n              return { ...event, willChange: true }; // Indicate that will-change event fired\n            }\n          ),\n          waitForEvent(this.loadedSound, 'audio-position-changed'),\n          waitForProperty(\n            this,\n            'loadedSound',\n            (sound) => sound?.position != position\n          ),\n        ]);\n\n        if (result?.willChange) {\n          // If audio-position-will-change was the event, wait for a delay before letting the sound update again\n        } else if (result?.sound) {\n          // Handle audio-position-changed or other position updates\n          this.modifyPosition({\n            sound: result.sound,\n            position: result?.newPosition,\n          });\n        } else if (this.loadedSound) {\n          // Fallback to update the position based on the current sound\n          this.modifyPosition({ sound: this.loadedSound });\n        }\n      }\n    }\n  }\n}\n"],"names":["SoundPositionProgressModifier","_class","Modifier","constructor","args","_initializerDefineProperty","_descriptor","_defineProperty","loadedSound","stereo","findLoadedSound","identifier","modifyPosition","sound","position","duration","dur","pos","percent","Math","max","min","element","style","width","pointerEvents","modify","options","setAttribute","watchPositionTask","perform","catch","e","debug","waitForProperty","v","timeout","result","race","waitForEvent","then","event","newPosition","willChange","_applyDecoratedDescriptor","prototype","service","configurable","enumerable","writable","initializer","task","Object","getOwnPropertyDescriptor"],"mappings":"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"}