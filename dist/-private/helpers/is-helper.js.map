{"version":3,"file":"is-helper.js","sources":["../../../src/-private/helpers/is-helper.js"],"sourcesContent":["import { inject as service } from '@ember/service';\nimport Helper from '@ember/component/helper';\nimport { dedupeTracked } from 'tracked-toolbox';\n\nconst UNINITIALIZED = null;\nexport default class StereoBaseIsHelper extends Helper {\n  @service stereo;\n\n  identifier = UNINITIALIZED;\n  @dedupeTracked task = UNINITIALIZED;\n  @dedupeTracked soundProxy = UNINITIALIZED;\n  @dedupeTracked _sound = UNINITIALIZED;\n  @dedupeTracked options = UNINITIALIZED;\n\n  /**\n  returns the state\n  @method compute\n  @param {String} [url]\n  @return {boolean}\n  */\n\n  get isLoading() {\n    return (\n      (this.sound && this.sound.isLoading) ||\n      (this.soundProxy && this.soundProxy.isLoading)\n    );\n  }\n\n  get sound() {\n    if (this._sound) {\n      return this._sound;\n    } else if (this.soundProxy && this.soundProxy.value) {\n      return this.soundProxy.value;\n    }\n\n    return null;\n  }\n\n  get result() {\n    return false;\n  }\n\n  compute([identifier], options = {}) {\n    this.options = options;\n\n    if (identifier !== this.identifier) {\n      this.identifier = identifier;\n\n      if (identifier && identifier.url && identifier.play) {\n        this._sound = identifier;\n      }\n      if (identifier) {\n        this.soundProxy = this.stereo.soundProxy(identifier);\n      }\n\n      if (!this.sound) {\n        if (options.load) {\n          this.stereo.load(identifier, this.options);\n        }\n      }\n    }\n\n    return this.result;\n  }\n}\n"],"names":["UNINITIALIZED","StereoBaseIsHelper","_class","Helper","constructor","args","_initializerDefineProperty","_descriptor","_defineProperty","_descriptor2","_descriptor3","_descriptor4","_descriptor5","isLoading","sound","soundProxy","_sound","value","result","compute","identifier","options","url","play","stereo","load","_applyDecoratedDescriptor","prototype","service","configurable","enumerable","writable","initializer","dedupeTracked"],"mappings":"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"}