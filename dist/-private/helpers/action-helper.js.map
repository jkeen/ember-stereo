{"version":3,"file":"action-helper.js","sources":["../../../src/-private/helpers/action-helper.js"],"sourcesContent":["import { inject as service } from '@ember/service';\nimport Helper from '@ember/component/helper';\nimport prepareOptions from '../utils/prepare-options';\nimport { dedupeTracked } from 'tracked-toolbox';\nimport BaseSound from '../../stereo-connections/base';\n\nexport default class ActionHelper extends Helper {\n  @service stereo;\n  identifier = null;\n  @dedupeTracked options;\n  @dedupeTracked _sound;\n  @dedupeTracked soundProxy;\n\n  get sound() {\n    if (this._sound) {\n      return this._sound;\n    } else if (this.soundProxy && this.soundProxy.isResolved) {\n      return this.soundProxy.value;\n    }\n\n    return null;\n  }\n\n  compute([identifier], options = {}) {\n    this.options = prepareOptions(options);\n\n    if (identifier !== this.identifier) {\n      this.identifier = identifier;\n      if (this.identifier instanceof BaseSound) {\n        this._sound = this.identifier;\n      }\n\n      if (this.identifier) {\n        this.soundProxy = this.stereo.soundProxy(identifier);\n      }\n\n      if (!this.sound) {\n        if (options.load) {\n          this.stereo.load(this.identifier, this.options);\n        }\n      }\n    }\n\n    return (e) => this.performAction(this.sound, e);\n  }\n\n  performAction() {\n    return false;\n  }\n}\n"],"names":["ActionHelper","_class","Helper","constructor","args","_initializerDefineProperty","_descriptor","_defineProperty","_descriptor2","_descriptor3","_descriptor4","sound","_sound","soundProxy","isResolved","value","compute","identifier","options","prepareOptions","BaseSound","stereo","load","e","performAction","_applyDecoratedDescriptor","prototype","service","configurable","enumerable","writable","initializer","dedupeTracked"],"mappings":"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"}