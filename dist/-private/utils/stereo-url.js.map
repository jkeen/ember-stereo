{"version":3,"file":"stereo-url.js","sources":["../../../src/-private/utils/stereo-url.js"],"sourcesContent":["import { getMimeType } from './mime-types';\nimport { tracked } from '@glimmer/tracking';\nimport { isArray } from '@ember/array';\nexport default class StereoUrl {\n  @tracked options = {};\n  constructor(input, options = {}) {\n    this.el = document.createElement('a');\n    if (!input) {\n      throw new Error(\"can't create URL without any input\");\n    }\n\n    if (input) {\n      if (isArray(input)) {\n        input = input[0];\n      }\n\n      this.input = input;\n\n      if (input.url) {\n        this.el.href = input.url;\n      } else if (typeof input === 'string') {\n        this.el.href = input;\n      }\n\n      if (input.mimeType) {\n        this.options = { mimeType: input.mimeType };\n      } else if (options.mimeType) {\n        this.options = { mimeType: options.mimeType };\n      }\n    }\n  }\n\n  get mimeType() {\n    if (this.options.mimeType) {\n      return this.options.mimeType;\n    } else {\n      return getMimeType(this.url);\n    }\n  }\n\n  // this is the key used for comparisons\n  get key() {\n    return `${this.el.origin}${this.el.pathname}`;\n  }\n\n  get href() {\n    return this.el.href;\n  }\n  set href(u) {\n    this.el.href = u;\n  }\n\n  get pathname() {\n    return this.el.pathname;\n  }\n\n  get url() {\n    return this.el.href;\n  }\n  set url(u) {\n    this.el.href = u;\n  }\n\n  toString() {\n    return this.el.href;\n  }\n}\n"],"names":["StereoUrl","_class","constructor","input","options","_initializerDefineProperty","_descriptor","el","document","createElement","Error","isArray","url","href","mimeType","getMimeType","key","origin","pathname","u","toString","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer"],"mappings":";;;;;;AAEuC,IAClBA,SAAS,IAAAC,MAAA,GAAf,MAAMD,SAAS,CAAC;AAE7BE,EAAAA,WAAWA,CAACC,KAAK,EAAEC,OAAO,GAAG,EAAE,EAAE;AAAAC,IAAAA,0BAAA,kBAAAC,WAAA,EAAA,IAAA,CAAA,CAAA;IAC/B,IAAI,CAACC,EAAE,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CAAA;IACrC,IAAI,CAACN,KAAK,EAAE;AACV,MAAA,MAAM,IAAIO,KAAK,CAAC,oCAAoC,CAAC,CAAA;AACvD,KAAA;AAEA,IAAA,IAAIP,KAAK,EAAE;AACT,MAAA,IAAIQ,OAAO,CAACR,KAAK,CAAC,EAAE;AAClBA,QAAAA,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAA;AAClB,OAAA;MAEA,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAA;MAElB,IAAIA,KAAK,CAACS,GAAG,EAAE;AACb,QAAA,IAAI,CAACL,EAAE,CAACM,IAAI,GAAGV,KAAK,CAACS,GAAG,CAAA;AAC1B,OAAC,MAAM,IAAI,OAAOT,KAAK,KAAK,QAAQ,EAAE;AACpC,QAAA,IAAI,CAACI,EAAE,CAACM,IAAI,GAAGV,KAAK,CAAA;AACtB,OAAA;MAEA,IAAIA,KAAK,CAACW,QAAQ,EAAE;QAClB,IAAI,CAACV,OAAO,GAAG;UAAEU,QAAQ,EAAEX,KAAK,CAACW,QAAAA;SAAU,CAAA;AAC7C,OAAC,MAAM,IAAIV,OAAO,CAACU,QAAQ,EAAE;QAC3B,IAAI,CAACV,OAAO,GAAG;UAAEU,QAAQ,EAAEV,OAAO,CAACU,QAAAA;SAAU,CAAA;AAC/C,OAAA;AACF,KAAA;AACF,GAAA;EAEA,IAAIA,QAAQA,GAAG;AACb,IAAA,IAAI,IAAI,CAACV,OAAO,CAACU,QAAQ,EAAE;AACzB,MAAA,OAAO,IAAI,CAACV,OAAO,CAACU,QAAQ,CAAA;AAC9B,KAAC,MAAM;AACL,MAAA,OAAOC,WAAW,CAAC,IAAI,CAACH,GAAG,CAAC,CAAA;AAC9B,KAAA;AACF,GAAA;;AAEA;EACA,IAAII,GAAGA,GAAG;AACR,IAAA,OAAQ,CAAE,EAAA,IAAI,CAACT,EAAE,CAACU,MAAO,CAAE,EAAA,IAAI,CAACV,EAAE,CAACW,QAAS,CAAC,CAAA,CAAA;AAC/C,GAAA;EAEA,IAAIL,IAAIA,GAAG;AACT,IAAA,OAAO,IAAI,CAACN,EAAE,CAACM,IAAI,CAAA;AACrB,GAAA;EACA,IAAIA,IAAIA,CAACM,CAAC,EAAE;AACV,IAAA,IAAI,CAACZ,EAAE,CAACM,IAAI,GAAGM,CAAC,CAAA;AAClB,GAAA;EAEA,IAAID,QAAQA,GAAG;AACb,IAAA,OAAO,IAAI,CAACX,EAAE,CAACW,QAAQ,CAAA;AACzB,GAAA;EAEA,IAAIN,GAAGA,GAAG;AACR,IAAA,OAAO,IAAI,CAACL,EAAE,CAACM,IAAI,CAAA;AACrB,GAAA;EACA,IAAID,GAAGA,CAACO,CAAC,EAAE;AACT,IAAA,IAAI,CAACZ,EAAE,CAACM,IAAI,GAAGM,CAAC,CAAA;AAClB,GAAA;AAEAC,EAAAA,QAAQA,GAAG;AACT,IAAA,OAAO,IAAI,CAACb,EAAE,CAACM,IAAI,CAAA;AACrB,GAAA;AACF,CAAC,GAAAP,WAAA,GAAAe,yBAAA,CAAApB,MAAA,CAAAqB,SAAA,EAAA,SAAA,EAAA,CA9DEC,OAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;AAAAC,EAAAA,WAAA,cAAA;AAAA,IAAA,OAAW,EAAE,CAAA;AAAA,GAAA;AAAA,CAAA,CAAA,GAAA1B,MAAA;;;;"}