{"version":3,"file":"metadata-cache.js","sources":["../../../src/-private/utils/metadata-cache.js"],"sourcesContent":["import ObjectCache from './object-cache';\nimport normalizeIdentifier from './normalize-identifier';\n\n/**\n* This class caches metadata.\n  @private\n  @class MetadataCache\n*/\n\nexport default class MetadataCache extends ObjectCache {\n  name = 'ember-stereo:metadata-cache';\n\n  _store(_identifier, value) {\n    let identifier = normalizeIdentifier(_identifier);\n    if (identifier) {\n      let oldMetadata = this.find(_identifier);\n      this.keyCache[identifier] = value;\n\n      // TODO: It would be nice if we didn't have to set\n      // the entire metadata to trigger this event\n\n      let sound = this.stereo.findLoadedSound(identifier);\n      if (sound) {\n        sound.trigger('audio-metadata-changed', {\n          old: oldMetadata,\n          new: value,\n          sound,\n        });\n      }\n    }\n  }\n}\n"],"names":["MetadataCache","ObjectCache","constructor","args","_defineProperty","_store","_identifier","value","identifier","normalizeIdentifier","oldMetadata","find","keyCache","sound","stereo","findLoadedSound","trigger","old","new"],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;;AAEe,MAAMA,aAAa,SAASC,WAAW,CAAC;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,eAAA,eAC9C,6BAA6B,CAAA,CAAA;AAAA,GAAA;AAEpCC,EAAAA,MAAMA,CAACC,WAAW,EAAEC,KAAK,EAAE;AACzB,IAAA,IAAIC,UAAU,GAAGC,mBAAmB,CAACH,WAAW,CAAC,CAAA;AACjD,IAAA,IAAIE,UAAU,EAAE;AACd,MAAA,IAAIE,WAAW,GAAG,IAAI,CAACC,IAAI,CAACL,WAAW,CAAC,CAAA;AACxC,MAAA,IAAI,CAACM,QAAQ,CAACJ,UAAU,CAAC,GAAGD,KAAK,CAAA;;AAEjC;AACA;;MAEA,IAAIM,KAAK,GAAG,IAAI,CAACC,MAAM,CAACC,eAAe,CAACP,UAAU,CAAC,CAAA;AACnD,MAAA,IAAIK,KAAK,EAAE;AACTA,QAAAA,KAAK,CAACG,OAAO,CAAC,wBAAwB,EAAE;AACtCC,UAAAA,GAAG,EAAEP,WAAW;AAChBQ,UAAAA,GAAG,EAAEX,KAAK;AACVM,UAAAA,KAAAA;AACF,SAAC,CAAC,CAAA;AACJ,OAAA;AACF,KAAA;AACF,GAAA;AACF;;;;"}