{"version":3,"file":"sound-cache.js","sources":["../../../src/-private/utils/sound-cache.js"],"sourcesContent":["import { A as emberArray, makeArray } from '@ember/array';\nimport debug from 'debug';\nimport { tracked } from '@glimmer/tracking';\nimport BaseSound from '../../stereo-connections/base';\nimport hasEqualUrls from './has-equal-urls';\nimport normalizeIdentifier from './normalize-identifier';\nimport { inject as service } from '@ember/service';\nimport { TrackedObject, TrackedArray } from 'tracked-built-ins';\n\n/**\n * This class caches sound objects based on urls.\n * @private\n * @class SoundCaches\n */\n\nexport default class SoundCache {\n  @service stereo;\n\n  @tracked cachedCount = 0;\n  @tracked cachedList = new TrackedArray();\n  @tracked cachedSounds = new TrackedArray();\n  @tracked _cache = new TrackedObject();\n  name = 'ember-stereo:sound-cache';\n\n  reset() {\n    this._cache = {};\n    this.cachedCount = 0;\n    this.cachedList = [];\n    this.cachedSounds = [];\n  }\n\n  /**\n   * find - finds sounds in the cache by urls\n   * @method find\n   * @param {String} identifiers\n   * @return {Sound}\n   */\n  find(_identifiers) {\n    let cache = this._cache;\n    _identifiers = makeArray(_identifiers);\n    let identifiers = _identifiers.map((identity) =>\n      normalizeIdentifier(identity)\n    );\n    let sounds = emberArray(identifiers).map((url) => cache[url]);\n    let foundSounds = emberArray(sounds).compact();\n\n    if (foundSounds.length > 0) {\n      // debug(this.name)(`cache hit for `, foundSounds[0].url);\n    } else {\n      debug(this.name)(`cache miss for`, identifiers);\n    }\n\n    return foundSounds[0];\n  }\n\n  /**\n   * remove - removes a sound from the cache\n   *\n   * @method remove\n   * @param {Sound} sound\n   */\n  remove(_identifier) {\n    let identifier;\n\n    if (this.isDestroyed) return;\n    if (_identifier instanceof BaseSound) {\n      identifier = _identifier.url;\n    } else {\n      identifier = normalizeIdentifier(_identifier);\n    }\n\n    let url = Object.keys(this._cache).find((key) =>\n      hasEqualUrls(key, identifier)\n    );\n\n    debug(this.name)(`removing sound from cache with url: ${identifier}`);\n    if (this._cache[url]) {\n      delete this._cache[url];\n      this.cachedCount = Object.keys(this._cache).length;\n      this.cachedList = Object.keys(this._cache);\n      this.cachedSounds = Object.values(this._cache);\n    }\n  }\n\n  /**\n   * cache - caches the sound by the url\n   * @method cache\n   * @param  {Sound} sound\n   */\n  cache(sound) {\n    if (this.isDestroyed) return;\n    let identifier = normalizeIdentifier(sound.url);\n\n    debug(this.name)(`caching sound with url: ${identifier}`);\n\n    if (!this._cache[identifier]) {\n      this._cache[identifier] = sound;\n      this.cachedCount = Object.keys(this._cache).length;\n      this.cachedList = Object.keys(this._cache);\n      this.cachedSounds = Object.values(this._cache);\n    }\n  }\n}\n"],"names":["SoundCache","_class","constructor","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_defineProperty","reset","_cache","cachedCount","cachedList","cachedSounds","find","_identifiers","cache","makeArray","identifiers","map","identity","normalizeIdentifier","sounds","emberArray","url","foundSounds","compact","length","debug","name","remove","_identifier","identifier","isDestroyed","BaseSound","Object","keys","key","hasEqualUrls","values","sound","_applyDecoratedDescriptor","prototype","service","configurable","enumerable","writable","initializer","tracked","TrackedArray","TrackedObject"],"mappings":"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"}