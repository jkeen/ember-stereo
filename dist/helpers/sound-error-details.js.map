{"version":3,"file":"sound-error-details.js","sources":["../../src/helpers/sound-error-details.js"],"sourcesContent":["import Helper from '@ember/component/helper';\nimport { dedupeTracked } from 'tracked-toolbox';\nimport { inject as service } from '@ember/service';\nimport debugMessage from '../-private/utils/debug-message';\nimport hasEqualUrls from '../-private/utils/has-equal-urls';\n\n/**\n  A helper to display error details.\n  ```hbs\n  {{sound-error-details @identifier}}\n\n  {{sound-error-details @identifier connectionName=\"NativeAudio\"}} // only display errors from native audio\n  ```\n\n  @class {{sound-error-details}}\n  @type {Helper}\n*/\n\n/**\n  @method compute\n  @param {Any} identifier url, urls, url objects, promise that resolves to a url\n  @param {String} connectionName? name of connection's errors to get\n  @return {any}\n*/\n\nconst UNINITIALIZED = null;\nexport default class SoundIsErrored extends Helper {\n  name = 'sound-is-errored';\n  @service stereo;\n\n  identifier = UNINITIALIZED;\n  @dedupeTracked url;\n\n  get result() {\n    return this.stereo.cachedErrors.find((e) => hasEqualUrls(e.url, this.url));\n  }\n\n  compute([identifier], { connectionName }) {\n    if (identifier !== this.identifier) {\n      this.identifier = identifier;\n      this.stereo.resolveIdentifierTask\n        .perform(this.identifier)\n        .then((url) => (this.url = url))\n        .catch();\n    }\n\n    if (!this.result) {\n      return;\n    }\n\n    var errObject = this.result;\n    if (connectionName) {\n      debugMessage(this, `render = ${errObject.errors[connectionName]}`);\n      return errObject.errors[connectionName];\n    } else {\n      let errors = [];\n      this.stereo.connectionNames.forEach((name) => {\n        if (errObject.errors[name]) {\n          errors.push(errObject.errors[name]);\n        }\n      });\n\n      return errors[0] || errObject.errors.generic;\n    }\n  }\n}\n"],"names":["UNINITIALIZED","SoundIsErrored","_class","Helper","constructor","args","_defineProperty","_initializerDefineProperty","_descriptor","_descriptor2","result","stereo","cachedErrors","find","e","hasEqualUrls","url","compute","identifier","connectionName","resolveIdentifierTask","perform","then","catch","errObject","debugMessage","errors","connectionNames","forEach","name","push","generic","_applyDecoratedDescriptor","prototype","service","configurable","enumerable","writable","initializer","dedupeTracked"],"mappings":";;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,aAAa,GAAG,IAAI,CAAA;AACLC,IAAAA,cAAc,IAAAC,MAAA,GAApB,MAAMD,cAAc,SAASE,MAAM,CAAC;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,eAAA,eAC1C,kBAAkB,CAAA,CAAA;AAAAC,IAAAA,0BAAA,iBAAAC,WAAA,EAAA,IAAA,CAAA,CAAA;AAAAF,IAAAA,eAAA,qBAGZN,aAAa,CAAA,CAAA;AAAAO,IAAAA,0BAAA,cAAAE,YAAA,EAAA,IAAA,CAAA,CAAA;AAAA,GAAA;EAG1B,IAAIC,MAAMA,GAAG;IACX,OAAO,IAAI,CAACC,MAAM,CAACC,YAAY,CAACC,IAAI,CAAEC,CAAC,IAAKC,YAAY,CAACD,CAAC,CAACE,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC,CAAC,CAAA;AAC5E,GAAA;AAEAC,EAAAA,OAAOA,CAAC,CAACC,UAAU,CAAC,EAAE;AAAEC,IAAAA,cAAAA;AAAe,GAAC,EAAE;AACxC,IAAA,IAAID,UAAU,KAAK,IAAI,CAACA,UAAU,EAAE;MAClC,IAAI,CAACA,UAAU,GAAGA,UAAU,CAAA;MAC5B,IAAI,CAACP,MAAM,CAACS,qBAAqB,CAC9BC,OAAO,CAAC,IAAI,CAACH,UAAU,CAAC,CACxBI,IAAI,CAAEN,GAAG,IAAM,IAAI,CAACA,GAAG,GAAGA,GAAI,CAAC,CAC/BO,KAAK,EAAE,CAAA;AACZ,KAAA;AAEA,IAAA,IAAI,CAAC,IAAI,CAACb,MAAM,EAAE;AAChB,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,IAAIc,SAAS,GAAG,IAAI,CAACd,MAAM,CAAA;AAC3B,IAAA,IAAIS,cAAc,EAAE;MAClBM,YAAY,CAAC,IAAI,EAAG,CAAWD,SAAAA,EAAAA,SAAS,CAACE,MAAM,CAACP,cAAc,CAAE,CAAA,CAAC,CAAC,CAAA;AAClE,MAAA,OAAOK,SAAS,CAACE,MAAM,CAACP,cAAc,CAAC,CAAA;AACzC,KAAC,MAAM;MACL,IAAIO,MAAM,GAAG,EAAE,CAAA;MACf,IAAI,CAACf,MAAM,CAACgB,eAAe,CAACC,OAAO,CAAEC,IAAI,IAAK;AAC5C,QAAA,IAAIL,SAAS,CAACE,MAAM,CAACG,IAAI,CAAC,EAAE;UAC1BH,MAAM,CAACI,IAAI,CAACN,SAAS,CAACE,MAAM,CAACG,IAAI,CAAC,CAAC,CAAA;AACrC,SAAA;AACF,OAAC,CAAC,CAAA;MAEF,OAAOH,MAAM,CAAC,CAAC,CAAC,IAAIF,SAAS,CAACE,MAAM,CAACK,OAAO,CAAA;AAC9C,KAAA;AACF,GAAA;AACF,CAAC,GAAAvB,WAAA,GAAAwB,yBAAA,CAAA9B,MAAA,CAAA+B,SAAA,EAAA,QAAA,EAAA,CArCEC,MAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;EAAAC,WAAA,EAAA,IAAA;AAAA,CAAA7B,CAAAA,EAAAA,YAAA,GAAAuB,yBAAA,CAAA9B,MAAA,CAAA+B,SAAA,UAGPM,aAAa,CAAA,EAAA;EAAAJ,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;EAAAC,WAAA,EAAA,IAAA;AAAA,CAAA,CAAA,GAAApC,MAAA;;;;"}