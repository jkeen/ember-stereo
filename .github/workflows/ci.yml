---
name: CI

on:
  push:
    branches:
      - main
      - develop
      - beta
      # npm version tags
      - /^v\d+.\d+.\d+(?:-(?:alpha|beta|rc)\.\d+)?/
  pull_request:
concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true
env:
  CI: true
  dist: ember-stereo/dist
jobs:
  install_dependencies:
    name: Install Dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v3
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.3.1
      - name: Install Dependencies
        run: pnpm install

  lint:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: Lint
    needs:
      - install_dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        path:
          - ./ember-stereo
          - ./test-app
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v3
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.3.1
      - name: Install Dependencies
        run: pnpm install
      - name: ESLint
        run: cd ${{ matrix.path }} && pnpm run lint:js
      - name: Template Lint
        run: cd ${{ matrix.path }} && pnpm run lint:hbs

  build:
    name: Build Tests
    needs:
      - install_dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v3
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.3.1
      - name: Install Dependencies
        run: pnpm install
      - name: Build and Assert Output
        run: |-
          echo 'target: ember-stereo/dist
          setup:
            run: pnpm build:js
            cwd: ./ember-stereo
          expect: |
            index.js
            index.js.map
            index.d.ts
            index.d.ts.map
          ' >> assert-contents.config.yml
                        npx assert-folder-contents
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}

  test:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: Default Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v3
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.3.1
      - name: Install Dependencies
        run: pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - run: pnpm --filter test-app run test:ember

  floating-dependencies:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: Floating Deps Test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v3
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.3.1
      - name: Install Dependencies (without lockfile)
        run: rm pnpm-lock.yaml && pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - run: pnpm --filter test-app run test:ember

  ember-try-required:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: Tests - ${{ matrix.ember-try-scenario }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-failure }}
    needs:
      - build
      - lint
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        ember-try-scenario:
          - ember-lts-3.28
          - ember-lts-4.4
          - ember-release
          - embroider-safe
          - embroider-optimized
        allow-failure: [false]
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v3
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.3.1
      - name: Install Dependencies (without lockfile)
        run: rm pnpm-lock.yaml && pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - name: test
        working-directory: ./test-app
        run: >-
          node_modules/.bin/ember try:one ${{ matrix.ember-try-scenario }}
          --skip-cleanup

  ember-try-optional:
    name: Tests - ${{ matrix.ember-try-scenario }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-failure }}
    needs:
      - build
      - lint
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        allow-failure: [true]
        ember-try-scenario:
          - ember-beta
          - ember-canary
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v3
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.3.1
      - name: Install Dependencies (without lockfile)
        run: rm pnpm-lock.yaml && pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - name: test
        working-directory: ./test-app
        run: >-
          node_modules/.bin/ember try:one ${{ matrix.ember-try-scenario }}
          --skip-cleanup

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [test, floating-dependencies, ember-try-required]
    steps:
      - uses: actions/checkout@v2
      - uses: volta-cli/action@v1

      - run: echo "ADDON_DOCS_VERSION_PATH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - run: echo "ADDON_DOCS_UPDATE_LATEST=true" >> $GITHUB_ENV
        if: contains(github.ref , 'main') == true

      - run: pnpm install

      - name: Deploy
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: pnpm ember deploy production --verbose --activate

  publish:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [test, floating-dependencies, ember-try-required]
    steps:
      - name: Dispatch Release
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Generate New Release
          token: ${{ secrets.GH_TOKEN }}
