---
name: CI

on:
  push:
    branches:
      - main
      - develop
      - beta
      # npm version tags
      - /^v\d+.\d+.\d+(?:-(?:alpha|beta|rc)\.\d+)?/
  pull_request:
concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true
env:
  CI: true
  dist: ember-stereo/dist
jobs:
  install_dependencies:
    name: Install Dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm

  lint:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: Lint
    needs: [install_dependencies]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        path:
          - ./ember-stereo
          - ./test-app
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - name: ESLint
        run: cd ${{ matrix.path }} && pnpm run lint:js
      - name: Template Lint
        run: cd ${{ matrix.path }} && pnpm run lint:hbs

  build:
    name: Build Tests
    needs: [install_dependencies]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/assert-build

  default-tests:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: Default Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - run: pnpm --filter test-app test:ember

  floating-dependencies:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: Floating Deps Test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - name: Install Dependencies (without lockfile)
        run: rm pnpm-lock.yaml && pnpm install
      - uses: ./.github/actions/download-built-package
      - run: pnpm --filter test-app test:ember

  ember-try-required:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: Tests - ${{ matrix.ember-try-scenario }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-failure }}
    needs:
      - build
      - lint
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        ember-try-scenario:
          - ember-lts-3.28
          - ember-lts-4.4
          - ember-release
          - embroider-safe
          - embroider-optimized
        allow-failure: [false]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - name: Run Tests
        working-directory: ./test-app
        run: |
          if [[ "${{matrix.ember-try-scenario}}" == "'ember-lts-4.8 + embroider-optimized'" ]]; then
            echo 'Running custom try scenario due to peer deps resolving incorrectly (due to installation issues)'
            pnpm add --save-dev ember-source@~4.8.0
            pnpm add --save-dev @embroider/core @embroider/webpack @embroider/compat
            pnpm test:ember
          else
            pnpm test:ember-try:one ${{ matrix.ember-try-scenario }} --skip-cleanup
          fi

  ember-try-optional:
    name: Tests - ${{ matrix.ember-try-scenario }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-failure }}
    needs: [build, lint]
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        allow-failure: [true]
        ember-try-scenario:
          - ember-beta
          - ember-canary
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - name: Run Tests
        working-directory: ./test-app
        run: |
          if [[ "${{matrix.ember-try-scenario}}" == "'ember-lts-4.8 + embroider-optimized'" ]]; then
            echo 'Running custom try scenario due to peer deps resolving incorrectly (due to installation issues)'
            pnpm add --save-dev ember-source@~4.8.0
            pnpm add --save-dev @embroider/core @embroider/webpack @embroider/compat
            pnpm test:ember
          else
            pnpm test:ember-try:one ${{ matrix.ember-try-scenario }} --skip-cleanup
          fi

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: >
      contains('
        refs/heads/main
        refs/heads/beta
      ', github.ref)
    needs: [default-tests, floating-dependencies, ember-try-required]
    steps:
      - name: Dispatch Release
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy Docs
          token: ${{ secrets.GH_TOKEN }}

  publish:
    name: Release
    runs-on: ubuntu-latest
    if: >
      contains('
        refs/heads/main
        refs/heads/beta
      ', github.ref)
    needs: [default-tests, floating-dependencies, ember-try-required]
    steps:
      - name: Dispatch Release
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Generate New Release
          token: ${{ secrets.GH_TOKEN }}
